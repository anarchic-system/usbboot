##
## Grub configuration for the multi-boot USB stick
##
##  UEFI version
##
##  by LeRouge
##
## ripped from http://www.preining.info/software/grub.cfg (thank you)
##

## This configuration is probably better understood
##  with the document timetombs-tip-unix-sysad-usb_boot2

## TODO
## - test with MBR/GPT (hybrid|protected)
## - add screenwall
## - not working:
##   . GNU/Debian
##   . CloneZilla -> drop into initramfs


## NOTES
## - use (hd0,gptX) to address partitions on a GPT partition table
## - use (hd0,msdosX) to address partitions on a msdos partition table
## - use --search
## - use UUID
## - loopback <device> <file>
##    make the device named <device> correspond to the contents
##    of the filesystem image in file

## REFERENCES
## - https://www.gnu.org/software/grub/manual/grub.html

## USAGE
## Two main ways to set the filesystem encapsulated in an ISO one wants to boot
## 1- set it manually
##    loopback <var> (hdX,<partition_table_type>X)/path/to/iso
##    then use (<var>) in linux or initrd call
## 2- let Grub2 figure it out by looking for UUID
##    search --no-floppy --fs-uuid --set=<var> <uuid>
##    then use <var> in the loopback command
##    if there is no <var> defined after --set option, 
##     then the var 'root' is implicitly used


##
## Modules required
##
## normal depends on crypto boot terminal charset
#insmode normal
## additional video and graphics support
#insmod all_video
## cryptography modules
#insmod gcry_<algo>
## partition table support
#insmod part_msdos
#insmod part_gpt
## to access cryptodisk
#insmod cryptodisk
#insmod luks
## LVM support
#insmod lvm
## to read raid array
#insmod diskfilter
## filesystem support
#insmod ext2
#insmod btrfs
#insmod fat
#insmod ntfs
#insmod ntfscomp
#insmod exfat
## to boot FreeDOS (directly, as in 'freedos /KERNEL.SYS')
#insmod freedos
## to boot old OS
#insmod memdisk
## keyboard layout
#insmod keylayouts
## detect whether or not key modifiers are active (caps lock, shift, ctrl, etc)
#insmod keystatus
## USB keyboard support
#insmod usb_keyboard
## Unicode font
#insmod unicode.pf2
## support for JPEG images (for wallpaper)
#insmod jpeg




##
## Global options
##
## specifies the time in seconds to wait for keyboard input before 
## booting the default menu entry
## https://www.gnu.org/software/grub/manual/grub.html#timeout
set timeout=90
## identifies a menu entry that should be selected by default
## https://www.gnu.org/software/grub/manual/grub.html#default
set default=0
## identifies a menu entry that should be selected if the default 
## menu entry fails to boot
## https://www.gnu.org/software/grub/manual/grub.html#fallback
set fallback=1
## pause output after each screenful and wait for keyboard input
## https://www.gnu.org/software/grub/manual/grub.html#pager
set pager=1
## enable debugginf output
#set debug



##
## Display settings
##
if loadfont /boot/grub/font.pf2 ; then
	set gfxmode=auto
	insmod efi_gop
	insmod efi_uga
	insmod gfxterm
	terminal_output gfxterm
fi




##
## FreeDOS
##
submenu "FreeDOS --->" {

	menuentry "FreeDOS (via MEMDISK and img)" {
		linux16 (hd0,gpt3)/boot/memdisk
		## image can be zip or gzip compressed
		## 4 MB or larger image is assumed to be a hard disk image
		##  (or add the parameter 'harddisk' to force it as HD image)
		## it should have an MBR and a partition table
		## (geometry is determined by examining the partition table)
		## ISO images must be accompanied with the parameter 'iso'
		## an ISOHYBRID image can be treated like a hard disk image
		#initrd16 (hd0,gpt3)/paf.img
		initrd16 (hd0,gpt3)/boot/iso/freetown-boot-freedos-iris.img
	}

	## this entry does NOT work in (U)EFI target
	menuentry "FreeDOS native -- freedos kernel.sys" {
		search --no-floppy --fs-uuid --set=root  022a-3547
		freedos /fdos/bin/kernel.sys
	}

	menuentry "FreeDOS native -- chainloaded" {
		set root=(hd0,gpt2)
		chainloader +1
		parttool ${root} boot+
		boot
	}

}




##
## System rescue CD -- OK
##
submenu "System Rescue CD 4.6.0 (via ISO) ---> " {

	set isofile="/boot/iso/systemrescuecd-x86-4.6.0.iso"

	menuentry "SystemRescueCd (64bit, default boot options)" {
		## video mode in which the Linux kernel starts up (replacing the 
		## ‘vga=’ boot option)
		## (text|keep|gfxmode)
		## https://www.gnu.org/software/grub/manual/grub.html#gfxpayload
		set      gfxpayload=keep
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/isolinux/rescue64 isoloop=$isofile
		initrd   (loop)/isolinux/initram.igz
	}

	menuentry "SystemRescueCd (64bit, cache all files in memory)" {
		set      gfxpayload=keep
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/isolinux/rescue64 isoloop=$isofile docache
		initrd   (loop)/isolinux/initram.igz
	}

	menuentry "SystemRescueCd (64bit, alternative kernel with default options)" {
		set      gfxpayload=keep
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/isolinux/altker64 isoloop=$isofile
		initrd   (loop)/isolinux/initram.igz
	}

	menuentry "SystemRescueCd (64bit, disable Kernel-Mode-Settings)" {
		set      gfxpayload=keep
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/isolinux/rescue64 nomodeset isoloop=$isofile
		initrd   (loop)/isolinux/initram.igz
	}

	menuentry "SystemRescueCd (64bit, directly start the grahical environment)" {
		set      gfxpayload=keep
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/isolinux/rescue64 dostartx isoloop=$isofile
		initrd   (loop)/isolinux/initram.igz
	}

}




##
## Tails -- OK
##
submenu "TAILS Environment 1.6 (via ISO) ---> " {

	set tailsiso="/boot/iso/tails-i386-1.6.iso"

	menuentry "Tails64 Live System" {
## The important part here is the live-media-path=/boot/tails,
##  otherwise TAILS will not find the correct files for booting.
##  The rest of the information was extracted from the boot setup of
##  TAILS itself.
#	linux	/boot/tails/vmlinuz2 boot=live live-media-path=/boot/tails config live-media=removable nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  
#	initrd	/boot/tails/initrd2.img
		loopback loop $tailsiso
		linux    (loop)/live/vmlinuz2 findiso=$tailsiso iso-scan/filename=$tailsiso boot=live config live-media=removable apparmor=1 security=apparmor nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails
		initrd   (loop)/live/initrd2.img
	}

	menuentry "Tails64 Live System (failsafe)" {
#	linux /boot/tails/vmlinuz2 boot=live live-media-path=/boot/tails config live-media=removable nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal 
#	initrd	/boot/tails/initrd2.img
		loopback loop $tailsiso
		linux    (loop)/live/vmlinuz2 findiso=$tailsiso iso-scan/filename=$tailsiso boot=live config live-media=removable nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal
		initrd   (loop)/live/initrd2.img
	}

	menuentry "Tails32 Live System" {
#	linux	/boot/tails/vmlinuz boot=live live-media-path=/boot/tails config live-media=removable nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  
#	initrd	/boot/tails/initrd.img
		loopback loop $tailsiso
		linux    (loop)/live/vmlinuz findiso=$tailsiso iso-scan/filename=$tailsiso boot=live config live-media=removable apparmor=1 security=apparmor nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails
		initrd   (loop)/live/initrd.img
	}

	menuentry "Tails32 Live System (failsafe)" {
#	linux /boot/tails/vmlinuz boot=live live-media-path=/boot/tails config live-media=removable nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal 
#	initrd	/boot/tails/initrd.img
		loopback loop $tailsiso
		linux    (loop)/live/vmlinuz findiso=$tailsiso iso-scan/filename=$tailsiso boot=live config live-media=removable apparmor=1 security=apparmor nopersistent noprompt timezone=Etc/UTC block.events_dfl_poll_msecs=1000 splash noautologin module=Tails  noapic noapm nodma nomce nolapic nomodeset nosmp vga=normal
		initrd   (loop)/live/initrd.img
	}

}




##
## GNU/Gnome Parted live CD -- OK
##
submenu "GNU/Gnome Parted Live CD 0.23.0 (via ISO) ---> " {

	set isofile="/boot/iso/gparted-live-0.23.0-1-i586.iso"

	menuentry "GParted Live (Default settings)"{
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject  ip=  net.ifnames=0 nosplash findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

	menuentry "GParted Live (Default settings, KMS)"{
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject vga=791 ip=  net.ifnames=0 nosplash  findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

	menuentry "GParted Live (To RAM, boot media can be removed later)"{
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject  toram=filesystem.squashfs ip=  net.ifnames=0 nosplash  findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

	menuentry "GParted Live Safe graphic settings (vga=normal)"{
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject ip= net.ifnames=0 nomodeset vga=normal nosplash  findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

	menuentry "GParted Live (Failsafe mode)"{
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap noeject acpi=off irqpoll noapic noapm nodma nomce nolapic nosmp ip= net.ifnames=0 nomodeset vga=normal nosplash  findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

	menuentry "memtest" {
		loopback loop (hd0,gpt3)$isofile
		linux16  (loop)/live/memtest
	}

}




##
## GRML -- OK
##
## unactivated: set kernelopts=" ssh=foobarbaz toram  " \n export kernelopts
submenu "GRML 2014.11 (via ISO) ---> " {

	set iso_path="/boot/iso/grml96-full_2014.11.iso"
	export iso_path

## FIXME- still has to figure out 'iso_path' -FIXME
## FIXME- my guess is that is a variable used by the second Grub menu
##        fom GRML. That would explain the 'export' usage to make the
##        variable visible to subsidiary configuration file
##        loaded by configfile -FIXME

	menuentry "Grml Rescue System - 64/32bit" {
		loopback   loop (hd0,gpt3)$iso_path
		set        root=(loop)
		configfile /boot/grub/loopback.cfg
	}

}




##
## Debian Installer 8 | Jessie -- NOK
##
## DI was saying vga=788 is deprecated, use gfxpaylod 800x600x16,800x600
## see https://www.gnu.org/software/grub/manual/grub.html#linux
## see https://www.gnu.org/software/grub/manual/grub.html#gfxpayload
## see https://www.gnu.org/software/grub/manual/grub.html#gfxmode
submenu "Debian 8.2 Jessie NetInstall (via ISO) ---> " {

	set gfxpayload=auto
	set isofile="/boot/iso/debian-8.2.0-amd64-i386-netinst.iso"

	menuentry '64 bit Install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.amd/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  -- quiet
		initrd   /boot/debian/install.amd/initrd.gz
	}

	menuentry '32 bit Install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.386/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  -- quiet
		initrd   /boot/debian/install.386/initrd.gz
	}

	menuentry '64 bit Graphical install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.amd/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  -- quiet
		initrd   /boot/debian/install.amd/gtk/initrd.gz
	}

	menuentry '32 bit Graphical install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.386/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  -- quiet
		initrd   /boot/debian/install.386/gtk/initrd.gz
	}

	menuentry '64 bit Expert install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.amd/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  priority=low recommends=low --
		initrd   /boot/debian/install.amd/initrd.gz
	}

	menuentry '32 bit Expert install' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.386/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  priority=low recommends=low --
		initrd   /boot/debian/install.386/initrd.gz
	}

	menuentry '64 bit Rescue mode' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.amd/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  rescue/enable=true -- quiet
		initrd   /boot/debian/install.amd/initrd.gz
	}

	menuentry '32 bit Rescue mode' {
		set background_color=black
		loopback loop (hd0,gpt3)$isofile
		linux    (loop)/install.386/vmlinuz iso-scan/ask_second_pass=true iso-scan/filename=$isofile  rescue/enable=true -- quiet
		initrd   /boot/debian/install.386/initrd.gz
	}

}




##
## CloneZilla -- NOK
##
## FIXME- not tested -FIXME
## entry courtesy of
##  - http://ubuntuforums.org/showthread.php?t=1549847
##  - http://clonezilla.org/livehd.php
submenu "CloneZilla (via ISO) ---> " {

	set isofile="/boot/iso/clonezilla-live-2.4.2-56-amd64.iso"

	menuentry "CloneZilla v.2.4.2-56 - amd64" {
		loopback loop (hd0,gpt3)$isofile
#		linux    /live-hd/vmlinuz boot=live username=user config components quiet nodmraid keyboard-layouts= locales= vga=788 ip=frommedia nosplash live-media-path=/live-hd bootfrom=/dev/sda4 toram=filesystem.squashfs
		linux    (loop)/live/vmlinuz boot=live union=overlay live-config components noswap nolocales edd=on nomodeset nodmraid ocs_live_run=\"ocs-live-general\" ocs_live_extra_param=\"\" locales= ip=frommedia nosplash toram findiso=$isofile
		initrd   (loop)/live/initrd.img
	}

}




##
## Kali -- OK
##
## entry courtesy of
## - https://forums.kali.org/showthread.php?1025-Grub2-Loop-Boot-Solution
submenu "Kali (via ISO) --->" {

	set isofile="/boot/iso/kali-linux-2.0-amd64.iso"

	menuentry "Kali v.2.0 - amd64" {
		loopback loop (hd0,gpt3)$isofile
		search   --set -f $isofile
		linux    (loop)/live/vmlinuz findiso=$isofile boot=live noconfig=sudo username=root hostname=blanchekali quiet splash
		initrd   (loop)/live/initrd.img
	}

}




##
## NTPasswd
##
## FIXME- add mention useful up to which version -FIXNE
menuentry "NTpasswd: reset or edit Windows passwords" {

	linux /boot/ntpasswd/vmlinuz rw vga=1
	initrd /boot/ntpasswd/initrd.cgz,/boot/ntpasswd/scsi.cgz

}


// vim: set ft=grub:
